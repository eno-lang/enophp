<?php

// This code was auto-generated on Sat Jul 07 2018 10:10:41 GMT+0200 (Central European Summer Time)
// by the eno-locales project (https://github.com/eno-lang/eno-locales/)
//
// eno-locales
// version 0.7.2

$MESSAGES = [
  'de' => [
    'elements' => [
      'dictionary' => 'Dictionary',
      'dictionary_entry' => 'Dictionary Eintrag',
      'document' => 'Dokument',
      'empty' => 'Leeres Element',
      'field' => 'Feld',
      'list' => 'Liste',
      'list_item' => 'Listeneintrag',
      'section' => 'Sektion',
      'value' => 'Wert'
    ],
    'reporting' => [
      'content_header' => 'Inhalt',
      'gutter_header' => 'Zeile'
    ],
    'tokenization' => [
      'invalid_line' => function($line) { return "Zeile ${line} folgt keinem spezifierten Muster."; },
      'unterminated_block' => function($name, $line) { return "Der Block '${name}' der in Zeile ${line} beginnt wird bis zum Ende des Dokuments nicht mehr beendet."; },
      'unterminated_escaped_name' => function($line) { return "In Zeile ${line} wird der Name eines Elements escaped, jedoch wird diese Escape Sequenz bis zum Ende der Zeile nicht mehr beendet."; }
    ],
    'analysis' => [
      'dictionary_entry_in_field' => function($line) { return "Zeile ${line} enthält einen Dictionary Eintrag in einem Feld."; },
      'dictionary_entry_in_list' => function($line) { return "Zeile ${line} enthält einen Dictionary Eintrag in einer Liste."; },
      'duplicate_dictionary_entry_name' => function($dictionary_name, $entry_name) { return "Das Dictionary '${dictionary_name}' enthält zwei Einträge mit dem Namen '${entry_name}'."; },
      'list_item_in_dictionary' => function($line) { return "Zeile ${line} enthält einen Listeneintrag in einem Dictionary"; },
      'list_item_in_field' => function($line) { return "Zeile ${line} enthält einen Listeneintrag in einem Feld"; },
      'missing_element_for_continuation' => function($line) { return "Zeile ${line} enthält eine Fortsetzung ohne dass davor ein fortsetzbares Element angegeben wurde."; },
      'missing_name_for_dictionary_entry' => function($line) { return "Zeile ${line} enthält einen Dictionary Eintrag ohne dass davor ein Name für ein Dictionary angegeben wurde."; },
      'missing_name_for_list_item' => function($line) { return "Zeile ${line} enthält einen Listeneintrag ohne dass davor ein Name für eine Liste angegeben wurde."; },
      'section_hierarchy_layer_skip' => function($line) { return "Zeile ${line} beginnt eine Sektion die mehr als eine Ebene tiefer liegt als die aktuelle."; }
    ],
    'resolution' => [
      'copying_block_into_dictionary' => function($line) { return "In Zeile ${line} wird ein Block in ein Dictionary kopiert."; },
      'copying_block_into_list' => function($line) { return "In Zeile ${line} wird ein Block in eine Liste kopiert."; },
      'copying_block_into_section' => function($line) { return "In Zeile ${line} wird ein Block in eine Sektion kopiert."; },
      'copying_dictionary_into_field' => function($line) { return "In Zeile ${line} wird ein Dictionary in ein Feld kopiert."; },
      'copying_dictionary_into_list' => function($line) { return "In Zeile ${line} wird ein Dictionary in eine Liste kopiert."; },
      'copying_dictionary_into_section' => function($line) { return "In Zeile ${line} wird ein Dictionary in eine Sektion kopiert."; },
      'copying_field_into_dictionary' => function($line) { return "In Zeile ${line} wird ein Feld in ein Dictionary kopiert."; },
      'copying_field_into_list' => function($line) { return "In Zeile ${line} wird ein Feld in eine Liste kopiert."; },
      'copying_field_into_section' => function($line) { return "In Zeile ${line} wird ein Feld in eine Sektion kopiert."; },
      'copying_list_into_dictionary' => function($line) { return "In Zeile ${line} wird eine Liste in ein Dictionary kopiert."; },
      'copying_list_into_field' => function($line) { return "In Zeile ${line} wird eine Liste in ein Feld kopiert."; },
      'copying_list_into_section' => function($line) { return "In Zeile ${line} wird eine Liste in eine Sektion kopiert."; },
      'copying_section_into_dictionary' => function($line) { return "In Zeile ${line} wird eine Sektion in ein Dictionary kopiert."; },
      'copying_section_into_empty' => function($line) { return "In Zeile ${line} wird eine Sektion in ein leeres Element kopiert."; },
      'copying_section_into_field' => function($line) { return "In Zeile ${line} wird eine Sektion in ein Feld kopiert."; },
      'copying_section_into_list' => function($line) { return "In Zeile ${line} wird eine Sektion in eine Liste kopiert."; },
      'cyclic_dependency' => function($line, $name) { return "In Zeile ${line} wird '${name}' in sich selbst kopiert."; },
      'multiple_templates_found' => function($line, $name) { return "In Zeile ${line} ist nicht klar welches der Elemente mit dem Namen '${name}' kopiert werden soll."; },
      'template_not_found' => function($line, $name) { return "In Zeile ${line} soll das Element '${name}' kopiert werden, es wurde aber nicht gefunden."; }
    ],
    'validation' => [
      'exact_count_not_met' => function($name, $actual, $expected) { return "Die Liste '${name}' enthält ${actual} Einträge, muss aber genau ${expected} Einträge enthalten."; },
      'excess_name' => function($name) { return "Ein überschüssiges Element mit dem Namen '${name}' wurde gefunden, handelt es sich eventuell um einen Tippfehler?"; },
      'expected_dictionaries_got_field' => function($name) { return "Es wurden nur Dictionaries mit dem Namen '${name}' erwartet, jedoch ein Feld mit diesem Namen vorgefunden."; },
      'expected_dictionaries_got_list' => function($name) { return "Es wurden nur Dictionaries mit dem Namen '${name}' erwartet, jedoch eine Liste mit diesem Namen vorgefunden."; },
      'expected_dictionaries_got_section' => function($name) { return "Es wurden nur Dictionaries mit dem Namen '${name}' erwartet, jedoch eine Sektion mit diesem Namen vorgefunden."; },
      'expected_dictionary_got_dictionaries' => function($name) { return "Statt dem erwarteten einzelnen Dictionary '${name}' wurden mehrere Dictionaries mit diesem Namen vorgefunden."; },
      'expected_dictionary_got_field' => function($name) { return "Statt dem erwarteten Dictionary '${name}' wurde ein Feld mit diesem Namen vorgefunden."; },
      'expected_dictionary_got_list' => function($name) { return "Statt dem erwarteten Dictionary '${name}' wurde eine Liste mit diesem Namen vorgefunden."; },
      'expected_dictionary_got_section' => function($name) { return "Statt dem erwarteten Dictionary '${name}' wurden eine Sektion mit diesem Namen vorgefunden."; },
      'expected_element_got_elements' => function($name) { return "Statt dem erwarteten einzelnen Element '${name}' wurden mehrere Elemente mit diesem Namen vorgefunden."; },
      'expected_field_got_dictionary' => function($name) { return "Statt dem erwarteten Feld '${name}' wurde eine Dictionary mit diesem Namen vorgefunden."; },
      'expected_field_got_fields' => function($name) { return "Statt dem erwarteten einzelnen Feld '${name}' wurden mehrere Felder mit diesem Namen vorgefunden."; },
      'expected_field_got_list' => function($name) { return "Statt dem erwarteten Feld '${name}' wurde eine Liste mit diesem Namen vorgefunden."; },
      'expected_field_got_section' => function($name) { return "Statt dem erwarteten Feld '${name}' wurde eine Sektion mit diesem Namen vorgefunden."; },
      'expected_fields_got_dictionary' => function($name) { return "Es wurden nur Felder mit dem Namen '${name}' erwartet, jedoch ein Dictionary mit diesem Namen vorgefunden."; },
      'expected_fields_got_list' => function($name) { return "Es wurden nur Felder mit dem Namen '${name}' erwartet, jedoch eine Liste mit diesem Namen vorgefunden."; },
      'expected_fields_got_section' => function($name) { return "Es wurden nur Felder mit dem Namen '${name}' erwartet, jedoch eine Sektion mit diesem Namen vorgefunden."; },
      'expected_list_got_dictionary' => function($name) { return "Statt der erwarteten Liste '${name}' wurde ein Dictionary mit diesem Namen vorgefunden."; },
      'expected_list_got_field' => function($name) { return "Statt der erwarteten Liste '${name}' wurde ein Feld mit diesem Namen vorgefunden."; },
      'expected_list_got_lists' => function($name) { return "Statt der erwarteten einzelnen Liste '${name}' wurden mehrere Listen mit diesem Namen vorgefunden."; },
      'expected_list_got_section' => function($name) { return "Statt der erwarteten Liste '${name}' wurde eine Sektion mit diesem Namen vorgefunden."; },
      'expected_lists_got_dictionary' => function($name) { return "Es wurden nur Listen mit dem Namen '${name}' erwartet, jedoch ein Dictionary mit diesem Namen vorgefunden."; },
      'expected_lists_got_field' => function($name) { return "Es wurden nur Listen mit dem Namen '${name}' erwartet, jedoch ein Feld mit diesem Namen vorgefunden."; },
      'expected_lists_got_section' => function($name) { return "Es wurden nur Listen mit dem Namen '${name}' erwartet, jedoch eine Sektion mit diesem Namen vorgefunden."; },
      'expected_section_got_dictionary' => function($name) { return "Statt der erwarteten Sektion '${name}' wurde ein Dictionary mit diesem Namen vorgefunden."; },
      'expected_section_got_empty' => function($name) { return "Statt der erwarteten Sektion '${name}' wurde ein leeres Element mit diesem Namen vorgefunden."; },
      'expected_section_got_field' => function($name) { return "Statt der erwarteten Sektion '${name}' wurde ein Feld mit diesem Namen vorgefunden."; },
      'expected_section_got_list' => function($name) { return "Statt der erwarteten Sektion '${name}' wurde eine Liste mit diesem Namen vorgefunden."; },
      'expected_section_got_sections' => function($name) { return "Statt der erwarteten einzelnen Sektion '${name}' wurden mehrere Sektionen mit diesem Namen vorgefunden."; },
      'expected_sections_got_dictionary' => function($name) { return "Es wurden nur Sektionen mit dem Namen '${name}' erwartet, jedoch ein Dictionary mit diesem Namen vorgefunden."; },
      'expected_sections_got_empty' => function($name) { return "Es wurden nur Sektionen mit dem Namen '${name}' erwartet, jedoch ein leeres Element mit diesem Namen vorgefunden."; },
      'expected_sections_got_field' => function($name) { return "Es wurden nur Sektionen mit dem Namen '${name}' erwartet, jedoch ein Feld mit diesem Namen vorgefunden."; },
      'expected_sections_got_list' => function($name) { return "Es wurden nur Sektionen mit dem Namen '${name}' erwartet, jedoch eine Liste mit diesem Namen vorgefunden."; },
      'generic_error' => function($name) { return "Es besteht ein Problem mit dem Wert des Elements '${name}'."; },
      'max_count_not_met' => function($name, $actual, $maximum) { return "Die Liste '${name}' enthält ${actual} Einträge, darf aber nur maximal ${maximum} Einträge enthalten."; },
      'min_count_not_met' => function($name, $actual, $minimum) { return "Die Liste '${name}' enthält ${actual} Einträge, muss aber mindestens ${minimum} Einträge enthalten."; },
      'missing_dictionary' => function($name) { return "Das Dictionary '${name}' fehlt - falls es angegeben wurde eventuell nach Tippfehlern Ausschau halten und auch die Gross/Kleinschreibung beachten."; },
      'missing_dictionary_entry' => function($name) { return "Der Dictionary Eintrag '${name}' fehlt - falls er angegeben wurde eventuell nach Tippfehlern Ausschau halten und auch die Gross/Kleinschreibung beachten."; },
      'missing_dictionary_entry_value' => function($name) { return "Der Dictionary Eintrag '${name}' muss einen Wert enthalten."; },
      'missing_element' => function($name) { return "Das Element '${name}' fehlt - falls es angegeben wurde eventuell nach Tippfehlern Ausschau halten und auch die Gross/Kleinschreibung beachten."; },
      'missing_field' => function($name) { return "Das Feld '${name}' fehlt - falls es angegeben wurde eventuell nach Tippfehlern Ausschau halten und auch die Gross/Kleinschreibung beachten."; },
      'missing_field_value' => function($name) { return "Das Feld '${name}' muss einen Wert enthalten."; },
      'missing_list' => function($name) { return "Die Liste '${name}' fehlt - falls sie angegeben wurde eventuell nach Tippfehlern Ausschau halten und auch die Gross/Kleinschreibung beachten."; },
      'missing_list_item_value' => function($name) { return "Die Liste '${name}' darf keine leeren Einträge enthalten."; },
      'missing_section' => function($name) { return "Die Sektion '${name}' fehlt - falls sie angegeben wurde eventuell nach Tippfehlern Ausschau halten und auch die Gross/Kleinschreibung beachten."; }
    ],
    'loaders' => [
      'invalid_boolean' => function($name) { return "'${name}' muss einen Boolean Wert enthalten - erlaubte Werte sind 'true', 'false', 'yes' und 'no'."; },
      'invalid_color' => function($name) { return "'${name}' muss eine Farbe enthalten, zum Beispiel '#B6D918', '#fff' oder '#01b'."; },
      'invalid_coordinates' => function($name) { return "'${name}' muss ein valides Breiten-/Längengrad Koordinatenpaar enthalten, zum Beispiel '48.2093723, 16.356099'."; },
      'invalid_datetime' => function($name) { return "'${name}' muss ein valides Datum oder Datum und Zeit enhalten, zum Beispiel '1997-07-16' oder '1994-11-05T13:15Z' (siehe https://www.w3.org/TR/NOTE-datetime)."; },
      'invalid_email' => function($name) { return "'${name}' muss eine valide Email Adresse enthalten, zum Beispiel 'jane.doe@eno-lang.org'."; },
      'invalid_float' => function($name) { return "'${name}' muss eine Dezimalzahl enthalten, zum Beispiel '13.0', '-9.159' oder '42'."; },
      'invalid_integer' => function($name) { return "'${name}' muss eine Ganzzahl enthalten, zum Beispiel '42' oder '-21'."; },
      'invalid_json' => function($name, $error) { return "'${name}' muss valides JSON enthalten - die Meldung des Parsers war: '${error}'."; },
      'invalid_url' => function($name) { return "'${name}' muss eine valide URL enhalten, zum Beispiel 'https://eno-lang.org'."; }
    ]
  ],
  'en' => [
    'elements' => [
      'dictionary' => 'Dictionary',
      'dictionary_entry' => 'Dictionary Entry',
      'document' => 'Document',
      'empty' => 'Empty Element',
      'field' => 'Field',
      'list' => 'List',
      'list_item' => 'List Item',
      'section' => 'Section',
      'value' => 'Value'
    ],
    'reporting' => [
      'content_header' => 'Content',
      'gutter_header' => 'Line'
    ],
    'tokenization' => [
      'invalid_line' => function($line) { return "Line ${line} does not follow any specified pattern."; },
      'unterminated_block' => function($name, $line) { return "The block '${name}' starting in line ${line} is not terminated until the end of the document."; },
      'unterminated_escaped_name' => function($line) { return "In line ${line} the name of an element is escaped, but the escape sequence is not terminated until the end of the line."; }
    ],
    'analysis' => [
      'dictionary_entry_in_field' => function($line) { return "Line ${line} contains a dictionary entry inside a field."; },
      'dictionary_entry_in_list' => function($line) { return "Line ${line} contains a dictionary entry inside a list."; },
      'duplicate_dictionary_entry_name' => function($dictionary_name, $entry_name) { return "The Dictionary '${dictionary_name}' contains two entries named '${entry_name}'."; },
      'list_item_in_dictionary' => function($line) { return "Line ${line} contains a list item inside a dictionary."; },
      'list_item_in_field' => function($line) { return "Line ${line} contains a list item inside a field."; },
      'missing_element_for_continuation' => function($line) { return "Line ${line} contains a continuation without any continuable element being specified before."; },
      'missing_name_for_dictionary_entry' => function($line) { return "Line ${line} contains a dictionary entry without a name for a dictionary being specified before."; },
      'missing_name_for_list_item' => function($line) { return "Line ${line} contains a list item without a name for a list being specified before."; },
      'section_hierarchy_layer_skip' => function($line) { return "Line ${line} starts a section that is more than one level deeper than the current one."; }
    ],
    'resolution' => [
      'copying_block_into_dictionary' => function($line) { return "In line ${line} a block is copied into a dictionary."; },
      'copying_block_into_list' => function($line) { return "In line ${line} a block is copied into a list."; },
      'copying_block_into_section' => function($line) { return "In line ${line} a block is copied into a section."; },
      'copying_dictionary_into_field' => function($line) { return "In line ${line} a dictionary is copied into a field."; },
      'copying_dictionary_into_list' => function($line) { return "In line ${line} a dictionary is copied into a list."; },
      'copying_dictionary_into_section' => function($line) { return "In line ${line} a dictionary is copied into a section."; },
      'copying_field_into_dictionary' => function($line) { return "In line ${line} a field is copied into a dictionary."; },
      'copying_field_into_list' => function($line) { return "In line ${line} a field is copied into a list."; },
      'copying_field_into_section' => function($line) { return "In line ${line} a field is copied into a section."; },
      'copying_list_into_dictionary' => function($line) { return "In line ${line} a list is copied into a dictionary."; },
      'copying_list_into_field' => function($line) { return "In line ${line} a list is copied into a field."; },
      'copying_list_into_section' => function($line) { return "In line ${line} a list is copied into a section."; },
      'copying_section_into_dictionary' => function($line) { return "In line ${line} a section is copied into a dictionary."; },
      'copying_section_into_empty' => function($line) { return "In line ${line} a section is copied into an empty element."; },
      'copying_section_into_field' => function($line) { return "In line ${line} a section is copied into a field."; },
      'copying_section_into_list' => function($line) { return "In line ${line} a section is copied into a list."; },
      'cyclic_dependency' => function($line, $name) { return "In line ${line} '${name}' is copied into itself."; },
      'multiple_templates_found' => function($line, $name) { return "In line ${line} it is not clear which of the elements named '${name}' should be copied."; },
      'template_not_found' => function($line, $name) { return "In line ${line} the element '${name}' should be copied, but it was not found."; }
    ],
    'validation' => [
      'exact_count_not_met' => function($name, $actual, $expected) { return "The list '${name}' contains ${actual} items, but must contain exactly ${expected} items."; },
      'excess_name' => function($name) { return "An excess element named '${name}' was found, is it possibly a typo?"; },
      'expected_dictionaries_got_field' => function($name) { return "Only dictionaries with the name '${name}' were expected, but a field with this name was found."; },
      'expected_dictionaries_got_list' => function($name) { return "Only dictionaries with the name '${name}' were expected, but a list with this name was found."; },
      'expected_dictionaries_got_section' => function($name) { return "Only dictionaries with the name '${name}' were expected, but a section with this name was found."; },
      'expected_dictionary_got_dictionaries' => function($name) { return "Instead of the expected single dictionary '${name}' several dictionaries with this name were found."; },
      'expected_dictionary_got_field' => function($name) { return "Instead of the expected dictionary '${name}' a field with this name was found."; },
      'expected_dictionary_got_list' => function($name) { return "Instead of the expected dictionary '${name}' a list with this name was found."; },
      'expected_dictionary_got_section' => function($name) { return "Instead of the expected dictionary '${name}' a section with this name was found."; },
      'expected_element_got_elements' => function($name) { return "Instead of the expected single element '${name}' several elements with this name were found."; },
      'expected_field_got_dictionary' => function($name) { return "Instead of the expected field '${name}' a dictionary with this name was found."; },
      'expected_field_got_fields' => function($name) { return "Instead of the expected single field '${name}' several fields with this name were found."; },
      'expected_field_got_list' => function($name) { return "Instead of the expected field '${name}' a list with this name was found."; },
      'expected_field_got_section' => function($name) { return "Instead of the expected field '${name}' a section with this name was found."; },
      'expected_fields_got_dictionary' => function($name) { return "Only fields with the name '${name}' were expected, but a dictionary with this name was found."; },
      'expected_fields_got_list' => function($name) { return "Only fields with the name '${name}' were expected, but a list with this name was found."; },
      'expected_fields_got_section' => function($name) { return "Only fields with the name '${name}' were expected, but a section with this name was found."; },
      'expected_list_got_dictionary' => function($name) { return "Instead of the expected list '${name}' a dictionary with this name was found."; },
      'expected_list_got_field' => function($name) { return "Instead of the expected list '${name}' a field with this name was found."; },
      'expected_list_got_lists' => function($name) { return "Instead of the expected single list '${name}' several lists with this name were found."; },
      'expected_list_got_section' => function($name) { return "Instead of the expected list '${name}' a section with this name was found."; },
      'expected_lists_got_dictionary' => function($name) { return "Only lists with the name '${name}' were expected, but a dictionary with this name was found."; },
      'expected_lists_got_field' => function($name) { return "Only lists with the name '${name}' were expected, but a field with this name was found."; },
      'expected_lists_got_section' => function($name) { return "Only lists with the name '${name}' were expected, but a section with this name was found."; },
      'expected_section_got_dictionary' => function($name) { return "Instead of the expected section '${name}' a dictionary with this name was found."; },
      'expected_section_got_empty' => function($name) { return "Instead of the expected section '${name}' an empty element with this name was found."; },
      'expected_section_got_field' => function($name) { return "Instead of the expected section '${name}' a field with this name was found."; },
      'expected_section_got_list' => function($name) { return "Instead of the expected section '${name}' a list with this name was found."; },
      'expected_section_got_sections' => function($name) { return "Instead of the expected single section '${name}' several sections with this name were found."; },
      'expected_sections_got_dictionary' => function($name) { return "Only sections with the name '${name}' were expected, but a dictionary with this name was found."; },
      'expected_sections_got_empty' => function($name) { return "Only sections with the name '${name}' were expected, but an empty element with this name was found."; },
      'expected_sections_got_field' => function($name) { return "Only sections with the name '${name}' were expected, but a field with this name was found."; },
      'expected_sections_got_list' => function($name) { return "Only sections with the name '${name}' were expected, but a list with this name was found."; },
      'generic_error' => function($name) { return "There is a problem with the value of the element '${name}'."; },
      'max_count_not_met' => function($name, $actual, $maximum) { return "The list '${name}' contains ${actual} items, but may only contain a maximum of ${maximum} items."; },
      'min_count_not_met' => function($name, $actual, $minimum) { return "The list '${name}' contains ${actual} items, but must contain at least ${minimum} items."; },
      'missing_dictionary' => function($name) { return "The dictionary '${name}' is missing - in case it has been specified look for typos and also check for correct capitalization."; },
      'missing_dictionary_entry' => function($name) { return "The dictionary entry '${name}' is missing - in case it has been specified look for typos and also check for correct capitalization."; },
      'missing_dictionary_entry_value' => function($name) { return "The dictionary entry '${name}' must contain a value."; },
      'missing_element' => function($name) { return "The element '${name}' is missing - in case it has been specified look for typos and also check for correct capitalization."; },
      'missing_field' => function($name) { return "The field '${name}' is missing - in case it has been specified look for typos and also check for correct capitalization."; },
      'missing_field_value' => function($name) { return "The field '${name}' must contain a value."; },
      'missing_list' => function($name) { return "The list '${name}' is missing - in case it has been specified look for typos and also check for correct capitalization."; },
      'missing_list_item_value' => function($name) { return "The list '${name}' may not contain empty items."; },
      'missing_section' => function($name) { return "The section '${name}' is missing - in case it has been specified look for typos and also check for correct capitalization."; }
    ],
    'loaders' => [
      'invalid_boolean' => function($name) { return "'${name}' must contain a boolean - allowed values are 'true', 'false', 'yes' and 'no'."; },
      'invalid_color' => function($name) { return "'${name}' must contain a color, for instance '#B6D918', '#fff' or '#01b'."; },
      'invalid_coordinates' => function($name) { return "'${name}' must contain a valid latitude/longitude coordinate pair, for instance '48.2093723, 16.356099'."; },
      'invalid_datetime' => function($name) { return "'${name}' must contain a valid date or date and time, for instance '1997-07-16' or '1994-11-05T13:15Z' (see https://www.w3.org/TR/NOTE-datetime)."; },
      'invalid_email' => function($name) { return "'${name}' must contain a valid email address, for instance 'jane.doe@eno-lang.org'."; },
      'invalid_float' => function($name) { return "'${name}' must contain a decimal number, for instance '13.0', '-9.159' or '42'."; },
      'invalid_integer' => function($name) { return "'${name}' must contain an integer, for instance '42' or '-21'."; },
      'invalid_json' => function($name, $error) { return "'${name}' must contain valid JSON - the parser returned: '${error}'."; },
      'invalid_url' => function($name) { return "'${name}' must contain a valid URL, for instance 'https://eno-lang.org'."; }
    ]
  ],
  'es' => [
    'elements' => [
      'dictionary' => 'Diccionario',
      'dictionary_entry' => 'Entrada de Diccionario',
      'document' => 'Documento',
      'empty' => 'Elemento Vacío',
      'field' => 'Casilla',
      'list' => 'Lista',
      'list_item' => 'Entrada de Lista',
      'section' => 'Sección',
      'value' => 'Valor'
    ],
    'reporting' => [
      'content_header' => 'Contenido',
      'gutter_header' => 'Línea'
    ],
    'tokenization' => [
      'invalid_line' => function($line) { return "Línea ${line} no sigue un patrón especificado."; },
      'unterminated_block' => function($name, $line) { return "El bloque '${name}' que comienza en la línea ${line} no termina hasta el final del documento."; },
      'unterminated_escaped_name' => function($line) { return "En la línea ${line}, el nombre de un elemento se escapa, pero esta secuencia de escape no termina hasta el final de la línea."; }
    ],
    'analysis' => [
      'dictionary_entry_in_field' => function($line) { return "Línea ${line} contiene una entrada de diccionario en medio de una casilla."; },
      'dictionary_entry_in_list' => function($line) { return "Línea ${line} contiene una entrada de diccionario en medio de una lista."; },
      'duplicate_dictionary_entry_name' => function($dictionary_name, $entry_name) { return "El diccionario '${dictionary_name}' contiene dos entradas llamadas '${entry_name}'."; },
      'list_item_in_dictionary' => function($line) { return "Línea ${line} contiene una entrada de lista en medio de un diccionario."; },
      'list_item_in_field' => function($line) { return "Línea ${line} contiene una entrada de lista en medio de una casilla."; },
      'missing_element_for_continuation' => function($line) { return "Línea ${line} contiene una continuacíon sin un elemento que se puede continuar especificado antes."; },
      'missing_name_for_dictionary_entry' => function($line) { return "Línea ${line} contiene una entrada de diccionario sin un nombre especificado para un diccionario antes."; },
      'missing_name_for_list_item' => function($line) { return "Línea ${line} contiene una entrada de lista sin nombre para una lista especificada antes."; },
      'section_hierarchy_layer_skip' => function($line) { return "Línea ${line} inicia una sección que es más de un nivel más bajo el actual."; }
    ],
    'resolution' => [
      'copying_block_into_dictionary' => function($line) { return "En la línea ${line}, un bloque se copia en un diccionario."; },
      'copying_block_into_list' => function($line) { return "En la línea ${line}, un bloque se copia en una lista."; },
      'copying_block_into_section' => function($line) { return "En la línea ${line}, un bloque se copia en una sección."; },
      'copying_dictionary_into_field' => function($line) { return "En la línea ${line}, un diccionario se copia en una casilla."; },
      'copying_dictionary_into_list' => function($line) { return "En la línea ${line}, un diccionario se copia en una lista."; },
      'copying_dictionary_into_section' => function($line) { return "En la línea ${line}, un diccionario se copia en una sección."; },
      'copying_field_into_dictionary' => function($line) { return "En la línea ${line}, una casilla se copia en un diccionario."; },
      'copying_field_into_list' => function($line) { return "En la línea ${line} una casilla se copia en una lista."; },
      'copying_field_into_section' => function($line) { return "En la línea ${line}, una casilla se copia en una sección."; },
      'copying_list_into_dictionary' => function($line) { return "En la línea ${line}, una lista se copia en un diccionario."; },
      'copying_list_into_field' => function($line) { return "En la línea ${line}, una lista se copia en una casilla."; },
      'copying_list_into_section' => function($line) { return "En la línea ${line}, una lista se copia en una sección."; },
      'copying_section_into_dictionary' => function($line) { return "En la línea ${line}, una sección se copia en un diccionario."; },
      'copying_section_into_empty' => function($line) { return "En la línea ${line} una sección se copia en un elemento vacío."; },
      'copying_section_into_field' => function($line) { return "En la línea ${line}, una sección se copia en una casilla."; },
      'copying_section_into_list' => function($line) { return "En la línea ${line} una sección se copia en una lista."; },
      'cyclic_dependency' => function($line, $name) { return "En la línea ${line} '${name}' se copia en sí mismo."; },
      'multiple_templates_found' => function($line, $name) { return "En la línea ${line} no está claro cual de los elementos con el nombre '${name}' debe ser copiado."; },
      'template_not_found' => function($line, $name) { return "En la línea ${line} debe ser copiado el elemento '${name}', pero no se encontró."; }
    ],
    'validation' => [
      'exact_count_not_met' => function($name, $actual, $expected) { return "La lista '${name}' contiene ${actual} entradas, pero debe contener exactamente ${expected} entradas."; },
      'excess_name' => function($name) { return "Un elemento sobrante con el nombre '${name}' se encontró, ¿es posiblemente un error tipográfico?"; },
      'expected_dictionaries_got_field' => function($name) { return "Solo se esperaban diccionarios con el nombre '${name}', pero se encontró una casilla con este nombre."; },
      'expected_dictionaries_got_list' => function($name) { return "Solo se esperaban diccionarios con el nombre '${name}', pero se encontró una lista con este nombre."; },
      'expected_dictionaries_got_section' => function($name) { return "Solo se esperaban diccionarios con el nombre '${name}', pero se encontró una sección con este nombre."; },
      'expected_dictionary_got_dictionaries' => function($name) { return "En lugar del único esperado diccionario '${name}' se encontraron varios diccionarios con este nombre."; },
      'expected_dictionary_got_field' => function($name) { return "En lugar del diccionario '${name}' esperado se encontró una casilla con este nombre."; },
      'expected_dictionary_got_list' => function($name) { return "En lugar del diccionario '${name}' esperado se encontró una lista con este nombre."; },
      'expected_dictionary_got_section' => function($name) { return "En lugar del diccionario '${name}' esperado se encontró una sección con este nombre."; },
      'expected_element_got_elements' => function($name) { return "En lugar del único esperado elemento '${name}' se encontraron varios elementos con este nombre."; },
      'expected_field_got_dictionary' => function($name) { return "En lugar de la casilla '${name}' esperada se encontró un diccionario con este nombre."; },
      'expected_field_got_fields' => function($name) { return "En lugar de la única casilla esperada '${name}' se encontraron varias casillas con este nombre."; },
      'expected_field_got_list' => function($name) { return "En lugar de la casilla '${name}' esperada se encontró una lista con este nombre."; },
      'expected_field_got_section' => function($name) { return "En lugar de la casilla '${name}' esperada se encontró una sección con este nombre."; },
      'expected_fields_got_dictionary' => function($name) { return "Solo se esperaban casillas con el nombre '${name}', pero se encontró un diccionario con este nombre."; },
      'expected_fields_got_list' => function($name) { return "Solo se esperaban casillas con el nombre '${name}', pero se encontró una lista con este nombre."; },
      'expected_fields_got_section' => function($name) { return "Solo se esperaban casillas con el nombre '${name}', pero se encontró una sección con este nombre."; },
      'expected_list_got_dictionary' => function($name) { return "En lugar de la lista '${name}' esperada se encontró un diccionario con este nombre."; },
      'expected_list_got_field' => function($name) { return "En lugar de la lista '${name}' esperada se encontró una casilla con este nombre."; },
      'expected_list_got_lists' => function($name) { return "En lugar de la única lista esperada '${name}' se encontraron varias listas con este nombre."; },
      'expected_list_got_section' => function($name) { return "En lugar de la lista '${name}' esperada se encontró una sección con este nombre."; },
      'expected_lists_got_dictionary' => function($name) { return "Solo se esperaban listas con el nombre '${name}', pero se encontró un diccionario con este nombre."; },
      'expected_lists_got_field' => function($name) { return "Solo se esperaban listas con el nombre '${name}', pero se encontró una casilla con este nombre."; },
      'expected_lists_got_section' => function($name) { return "Solo se esperaban listas con el nombre '${name}', pero se encontró una sección con este nombre."; },
      'expected_section_got_dictionary' => function($name) { return "En lugar de la sección '${name}' esperada se encontró un diccionario con este nombre."; },
      'expected_section_got_empty' => function($name) { return "En lugar de la sección '${name}' esperada se encontró un elemento vacío con este nombre."; },
      'expected_section_got_field' => function($name) { return "En lugar de la sección '${name}' esperada se encontró una casilla con este nombre."; },
      'expected_section_got_list' => function($name) { return "En lugar de la sección '${name}' esperada se encontró una lista con este nombre."; },
      'expected_section_got_sections' => function($name) { return "En lugar de la única sección esperada '${name}' se encontraron varias secciones con este nombre."; },
      'expected_sections_got_dictionary' => function($name) { return "Solo se esperaban secciones con el nombre '${name}', pero se encontró un diccionario con este nombre."; },
      'expected_sections_got_empty' => function($name) { return "Solo se esperaban secciones con el nombre '${name}', pero se encontró un elemento vacío con este nombre."; },
      'expected_sections_got_field' => function($name) { return "Solo se esperaban secciones con el nombre '${name}', pero se encontró una casilla con este nombre."; },
      'expected_sections_got_list' => function($name) { return "Solo se esperaban secciones con el nombre '${name}', pero se encontró una lista con este nombre."; },
      'generic_error' => function($name) { return "Hay un problema con el valor del elemento '${name}'."; },
      'max_count_not_met' => function($name, $actual, $maximum) { return "La lista '${name}' contiene ${actual} entradas, pero debe contener un máximo de ${maximum} entradas."; },
      'min_count_not_met' => function($name, $actual, $minimum) { return "La lista '${name}' contiene ${actual} entradas, pero debe contener al menos ${minimum} entradas."; },
      'missing_dictionary' => function($name) { return "Falta el diccionario '${name}' - si se proporcionó, mira por errores ortográficos y también distingue entre mayúsculas y minúsculas."; },
      'missing_dictionary_entry' => function($name) { return "Falta la entrada de diccionario '${name}' - si se proporcionó, mira por errores ortográficos y también distingue entre mayúsculas y minúsculas."; },
      'missing_dictionary_entry_value' => function($name) { return "La entrada de diccionario '${name}' debe contener un valor."; },
      'missing_element' => function($name) { return "Falta el elemento '${name}' - si se proporcionó, mira por errores ortográficos y también distingue entre mayúsculas y minúsculas."; },
      'missing_field' => function($name) { return "Falta la casilla '${name}' - si se proporcionó, mira por errores ortográficos y también distingue entre mayúsculas y minúsculas."; },
      'missing_field_value' => function($name) { return "La casilla '${name}' debe contener un valor."; },
      'missing_list' => function($name) { return "Falta la lista '${name}' - si se proporcionó, mira por errores ortográficos y también distingue entre mayúsculas y minúsculas."; },
      'missing_list_item_value' => function($name) { return "La lista '${name}' no debe contener entradas vacías."; },
      'missing_section' => function($name) { return "Falta la sección '${name}' - si se proporcionó, mira por errores ortográficos y también distingue entre mayúsculas y minúsculas."; }
    ],
    'loaders' => [
      'invalid_boolean' => function($name) { return "'${name}' debe contener un valor booleano - valores permitidos son 'true', 'false', 'yes' y 'no'."; },
      'invalid_color' => function($name) { return "'${name}' debe contener un color, por ejemplo '#B6D918', '#fff' o '#01b'."; },
      'invalid_coordinates' => function($name) { return "'${name}' debe contener una valida pareja de coordenadas latitud/longitud, por ejemplo '48.2093723, 16.356099'."; },
      'invalid_datetime' => function($name) { return "'${name}' debe contener una valida fecha o fecha y hora, por ejemplo '1997-07-16' o '1994-11-05T13:15Z' (vea https://www.w3.org/TR/NOTE-datetime)."; },
      'invalid_email' => function($name) { return "'${name}' debe contener una valida dirección electrónica, por ejemplo 'jane.doe@eno-lang.org'."; },
      'invalid_float' => function($name) { return "'${name}' debe contener un número decimal, por ejemplo '13.0', '-9.159' o '42'."; },
      'invalid_integer' => function($name) { return "'${name}' debe contener un número entero, por ejemplo '42' o '-21'."; },
      'invalid_json' => function($name, $error) { return "'${name}' debe contener JSON valido - el mensaje del parser fue '${error}'."; },
      'invalid_url' => function($name) { return "'${name}' debe contener un URL valido, por ejemplo 'https://eno-lang.org'."; }
    ]
  ]
];

?>
